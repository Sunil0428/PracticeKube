apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: app2
    tier: frontend
    project: expense
    environment: dev
    org: joindevops
spec:
  # modify replicas according to your case
  replicas: 2
  selector:
    matchLabels:
      app: app2
      tier: frontend
      project: expense
      environment: dev
      org: joindevops
  template:
    metadata:
      labels:
        tier: frontend
        app: app2
        project: expense
        environment: dev
        org: joindevops
    spec:
      containers:
      - name: nginx
        image: sunil0428/app2:v1
---
apiVersion: v1
kind: Service
metadata: 
  name: app2
spec:
  selector:
    tier: frontend
    app: app2
    project: expense
    environment: dev
    org: joindevops
  ports:
  - name: sample-service-port
    protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: app2
    annotations:
      #kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:423623871433:certificate/0f05f37f-8e2e-4b3a-a064-6e2946833c7f
      alb.ingress.kubernetes.io/listen-ports: '[ {"HTTPS": 443}]'
      alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
      alb.ingress.kubernetes.io/group.name: expense
spec:
    ingressClassName: alb
    rules:
    - host: "app2.mydevops.tech"
      http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: app2
              port:
                number: 80